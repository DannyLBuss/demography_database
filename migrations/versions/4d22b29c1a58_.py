"""empty message

Revision ID: 4d22b29c1a58
Revises: 1147f0db73b0
Create Date: 2015-12-03 09:55:26.988169

"""

# revision identifiers, used by Alembic.
revision = '4d22b29c1a58'
down_revision = '1147f0db73b0'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    # op.create_table('esa_statuses',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('status_code', sa.String(length=64), nullable=True),
    # sa.Column('status_name', sa.String(length=64), nullable=True),
    # sa.Column('status_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_esa_statuses_status_code', 'esa_statuses', ['status_code'], unique=False)
    # op.create_table('purposes',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('purpose_name', sa.String(length=64), nullable=True),
    # sa.Column('purpose_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_purposes_purpose_name', 'purposes', ['purpose_name'], unique=False)
    # op.create_table('iucn_status',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('status_code', sa.String(length=64), nullable=True),
    # sa.Column('status_name', sa.String(length=64), nullable=True),
    # sa.Column('status_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_iucn_status_status_code', 'iucn_status', ['status_code'], unique=False)
    # op.create_table('source_types',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('source_name', sa.String(length=64), nullable=True),
    # sa.Column('source_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_source_types_source_name', 'source_types', ['source_name'], unique=False)
    # op.create_table('growth_types',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('type_name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_growth_types_type_name', 'growth_types', ['type_name'], unique=False)
    # op.create_table('content_email',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('content_code', sa.String(length=5), nullable=True),
    # sa.Column('content_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_content_email_content_code', 'content_email', ['content_code'], unique=False)
    # op.create_table('transition_types',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('trans_code', sa.String(length=64), nullable=True),
    # sa.Column('trans_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_transition_types_trans_code', 'transition_types', ['trans_code'], unique=False)
    # op.create_table('treatment_types',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('type_name', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_treatment_types_type_name', 'treatment_types', ['type_name'], unique=False)
    # op.create_table('dicot_monoc',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('dicot_monoc_name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_dicot_monoc_dicot_monoc_name', 'dicot_monoc', ['dicot_monoc_name'], unique=False)
    # op.create_table('continents',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('continent_name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_continents_continent_name', 'continents', ['continent_name'], unique=False)
    # op.create_table('seasons',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_seasons_name', 'seasons', ['name'], unique=False)
    # op.create_table('captivities',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('cap_code', sa.String(length=5), nullable=True),
    # sa.Column('cap_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_captivities_cap_code', 'captivities', ['cap_code'], unique=False)
    # op.create_table('growth_forms_raunkiaer',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('form_name', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_growth_forms_raunkiaer_form_name', 'growth_forms_raunkiaer', ['form_name'], unique=False)
    # op.create_table('missing_data',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('missing_code', sa.String(length=5), nullable=True),
    # sa.Column('missing_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_missing_data_missing_code', 'missing_data', ['missing_code'], unique=False)
    # op.create_table('periodicities',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_periodicities_name', 'periodicities', ['name'], unique=False)
    # op.create_table('taxonomic_statuses',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('status_name', sa.String(length=64), nullable=True),
    # sa.Column('status_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_taxonomic_statuses_status_name', 'taxonomic_statuses', ['status_name'], unique=False)
    # op.create_table('stage_type_classes',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('type_class', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_stage_type_classes_type_class', 'stage_type_classes', ['type_class'], unique=False)
    # op.create_table('angio_gymno',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('angio_gymno_name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_angio_gymno_angio_gymno_name', 'angio_gymno', ['angio_gymno_name'], unique=False)
    # op.create_table('matrix_compositions',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('comp_name', sa.String(length=64), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('ecoregions',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('ecoregion_code', sa.String(length=5), nullable=True),
    # sa.Column('ecoregion_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_ecoregions_ecoregion_code', 'ecoregions', ['ecoregion_code'], unique=False)
    # op.create_table('studied_sex',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('sex_code', sa.String(length=5), nullable=True),
    # sa.Column('sex_description', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_studied_sex_sex_code', 'studied_sex', ['sex_code'], unique=False)
    # op.create_table('reproductive_repetition',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('repetition_name', sa.Text(), nullable=True),
    # sa.PrimaryKeyConstraint('id')
    # )
    # # op.create_index('ix_reproductive_repetition_repetition_name', 'reproductive_repetition', ['repetition_name'], unique=False)
    # op.create_table('stage_types',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('type_name', sa.Text(), nullable=True),
    # sa.Column('type_class_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['type_class_id'], ['stage_type_classes.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # # op.create_index('ix_stage_types_type_name', 'stage_types', ['type_name'], unique=False)
    # op.create_table('publications',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('source_type_id', sa.Integer(), nullable=True),
    # sa.Column('authors', sa.Text(), nullable=True),
    # sa.Column('editors', sa.Text(), nullable=True),
    # sa.Column('pub_title', sa.Text(), nullable=True),
    # sa.Column('journal_book_conf', sa.Text(), nullable=True),
    # sa.Column('year', sa.SmallInteger(), nullable=True),
    # sa.Column('volume', sa.Text(), nullable=True),
    # sa.Column('pages', sa.Text(), nullable=True),
    # sa.Column('publisher', sa.Text(), nullable=True),
    # sa.Column('city', sa.Text(), nullable=True),
    # sa.Column('country', sa.Text(), nullable=True),
    # sa.Column('institution', sa.Text(), nullable=True),
    # sa.Column('DOI_ISBN', sa.Text(), nullable=True),
    # sa.Column('name', sa.Text(), nullable=True),
    # sa.Column('corresponding_author', sa.Text(), nullable=True),
    # sa.Column('email', sa.Text(), nullable=True),
    # sa.Column('purposes_id', sa.Integer(), nullable=True),
    # sa.Column('date_digitised', sa.Date(), nullable=True),
    # sa.Column('embargo', sa.Date(), nullable=True),
    # sa.Column('missing_data_id', sa.Integer(), nullable=True),
    # sa.Column('user_created', sa.Integer(), nullable=True),
    # sa.Column('user_modified', sa.Integer(), nullable=True),
    # sa.Column('timestamp_created', sa.DateTime(), nullable=True),
    # sa.Column('timestamp_modified', sa.DateTime(), nullable=True),
    # sa.ForeignKeyConstraint(['missing_data_id'], ['missing_data.id'], ),
    # sa.ForeignKeyConstraint(['purposes_id'], ['purposes.id'], ),
    # sa.ForeignKeyConstraint(['source_type_id'], ['source_types.id'], ),
    # sa.ForeignKeyConstraint(['user_created'], ['users.id'], ),
    # sa.ForeignKeyConstraint(['user_modified'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('species',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('iucn_status_id', sa.Integer(), nullable=True),
    # sa.Column('esa_status_id', sa.Integer(), nullable=True),
    # sa.Column('invasive_status', sa.Boolean(), nullable=True),
    # sa.Column('user_created', sa.Integer(), nullable=True),
    # sa.Column('user_modified', sa.Integer(), nullable=True),
    # sa.Column('timestamp_created', sa.DateTime(), nullable=True),
    # sa.Column('timestamp_modified', sa.DateTime(), nullable=True),
    # sa.ForeignKeyConstraint(['esa_status_id'], ['esa_statuses.id'], ),
    # sa.ForeignKeyConstraint(['iucn_status_id'], ['iucn_status.id'], ),
    # sa.ForeignKeyConstraint(['user_created'], ['users.id'], ),
    # sa.ForeignKeyConstraint(['user_modified'], ['users.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_species_timestamp_modified', 'species', ['timestamp_modified'], unique=False)
    # op.create_table('taxonomies',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('species_id', sa.Integer(), nullable=True),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('species_author', sa.String(length=64), nullable=True),
    # sa.Column('species_accepted', sa.String(length=64), nullable=True),
    # sa.Column('authority', sa.Text(), nullable=True),
    # sa.Column('taxonomic_status_id', sa.Integer(), nullable=True),
    # sa.Column('tpl_version', sa.String(length=64), nullable=True),
    # sa.Column('infraspecies_accepted', sa.String(length=64), nullable=True),
    # sa.Column('species_epithet_accepted', sa.String(length=64), nullable=True),
    # sa.Column('genus_accepted', sa.String(length=64), nullable=True),
    # sa.Column('genus', sa.String(length=64), nullable=True),
    # sa.Column('family', sa.String(length=64), nullable=True),
    # sa.Column('tax_order', sa.String(length=64), nullable=True),
    # sa.Column('tax_class', sa.String(length=64), nullable=True),
    # sa.Column('phylum', sa.String(length=64), nullable=True),
    # sa.Column('kingdom', sa.String(length=64), nullable=True),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    # sa.ForeignKeyConstraint(['taxonomic_status_id'], ['taxonomic_statuses.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_taxonomies_species_author', 'taxonomies', ['species_author'], unique=False)
    # op.create_table('author_contacts',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('date_contacted', sa.Date(), nullable=True),
    # sa.Column('contacting_user_id', sa.Integer(), nullable=True),
    # sa.Column('content_email_id', sa.Integer(), nullable=True),
    # sa.Column('author_reply', sa.Text(), nullable=True),
    # sa.ForeignKeyConstraint(['contacting_user_id'], ['users.id'], ),
    # sa.ForeignKeyConstraint(['content_email_id'], ['content_email.id'], ),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_author_contacts_date_contacted', 'author_contacts', ['date_contacted'], unique=False)
    # op.create_table('stages',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('species_id', sa.Integer(), nullable=True),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('stage_type_id', sa.Integer(), nullable=True),
    # sa.Column('name', sa.Text(), nullable=True),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    # sa.ForeignKeyConstraint(['stage_type_id'], ['stage_types.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # # op.create_index('ix_stages_name', 'stages', ['name'], unique=False)
    # op.create_table('studies',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('study_duration', sa.Integer(), nullable=True),
    # sa.Column('study_start', sa.Date(), nullable=True),
    # sa.Column('study_end', sa.Date(), nullable=True),
    # sa.Column('number_populations', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_index('ix_studies_study_duration', 'studies', ['study_duration'], unique=False)
    # op.create_table('plant_traits',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('species_id', sa.Integer(), nullable=True),
    # sa.Column('max_height', sa.Float(), nullable=True),
    # sa.Column('growth_type_id', sa.Integer(), nullable=True),
    # sa.Column('growth_form_raunkiaer_id', sa.Integer(), nullable=True),
    # sa.Column('reproductive_repetition_id', sa.Integer(), nullable=True),
    # sa.Column('dicot_monoc_id', sa.Integer(), nullable=True),
    # sa.Column('angio_gymno_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['angio_gymno_id'], ['angio_gymno.id'], ),
    # sa.ForeignKeyConstraint(['dicot_monoc_id'], ['dicot_monoc.id'], ),
    # sa.ForeignKeyConstraint(['growth_form_raunkiaer_id'], ['growth_forms_raunkiaer.id'], ),
    # sa.ForeignKeyConstraint(['growth_type_id'], ['growth_types.id'], ),
    # sa.ForeignKeyConstraint(['reproductive_repetition_id'], ['reproductive_repetition.id'], ),
    # sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('treatments',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('treatment_type_id', sa.Integer(), nullable=True),
    # sa.Column('name', sa.Text(), nullable=True),
    # sa.Column('description', sa.Text(), nullable=True),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.ForeignKeyConstraint(['treatment_type_id'], ['treatment_types.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # # op.create_index('ix_treatments_name', 'treatments', ['name'], unique=False)
    # op.create_table('additional_sources',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('source_type_id', sa.Integer(), nullable=True),
    # sa.Column('authors', sa.Text(), nullable=True),
    # sa.Column('editors', sa.Text(), nullable=True),
    # sa.Column('pub_title', sa.Text(), nullable=True),
    # sa.Column('journal_book_conf', sa.Text(), nullable=True),
    # sa.Column('year', sa.SmallInteger(), nullable=True),
    # sa.Column('volume', sa.Text(), nullable=True),
    # sa.Column('pages', sa.Text(), nullable=True),
    # sa.Column('publisher', sa.Text(), nullable=True),
    # sa.Column('city', sa.Text(), nullable=True),
    # sa.Column('country', sa.Text(), nullable=True),
    # sa.Column('institution', sa.Text(), nullable=True),
    # sa.Column('DOI_ISBN', sa.Text(), nullable=True),
    # sa.Column('name', sa.Text(), nullable=True),
    # sa.Column('description', sa.Text(), nullable=True),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.ForeignKeyConstraint(['source_type_id'], ['source_types.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('populations',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('species_id', sa.Integer(), nullable=True),
    # sa.Column('publication_id', sa.Integer(), nullable=True),
    # sa.Column('study_id', sa.Integer(), nullable=True),
    # sa.Column('species_author', sa.String(length=64), nullable=True),
    # sa.Column('name', sa.Text(), nullable=True),
    # sa.Column('ecoregion_id', sa.Integer(), nullable=True),
    # sa.Column('country', sa.Text(), nullable=True),
    # sa.Column('continent_id', sa.Integer(), nullable=True),
    # sa.Column('geometries', sa.Text(), nullable=True),
    # sa.ForeignKeyConstraint(['continent_id'], ['continents.id'], ),
    # sa.ForeignKeyConstraint(['ecoregion_id'], ['ecoregions.id'], ),
    # sa.ForeignKeyConstraint(['publication_id'], ['publications.id'], ),
    # sa.ForeignKeyConstraint(['species_id'], ['species.id'], ),
    # sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # # op.create_index('ix_populations_name', 'populations', ['name'], unique=False)
    # op.create_table('matrices',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('population_id', sa.Integer(), nullable=True),
    # sa.Column('treatment_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_split', sa.Boolean(), nullable=True),
    # sa.Column('matrix_composition_id', sa.Integer(), nullable=True),
    # sa.Column('survival_issue', sa.Float(), nullable=True),
    # sa.Column('n_intervals', sa.SmallInteger(), nullable=True),
    # sa.Column('periodicity_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_criteria_size', sa.Boolean(), nullable=True),
    # sa.Column('matrix_criteria_ontogeny', sa.Boolean(), nullable=True),
    # sa.Column('matrix_criteria_age', sa.Boolean(), nullable=True),
    # sa.Column('study_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_start', sa.Date(), nullable=True),
    # sa.Column('matrix_end', sa.Date(), nullable=True),
    # sa.Column('matrix_start_season_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_end_season_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_fec', sa.Boolean(), nullable=True),
    # sa.Column('n_plots', sa.SmallInteger(), nullable=True),
    # sa.Column('plot_size', sa.Float(), nullable=True),
    # sa.Column('n_individuals', sa.Integer(), nullable=True),
    # sa.Column('studied_sex_id', sa.Integer(), nullable=True),
    # sa.Column('captivity_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_dimension', sa.Integer(), nullable=True),
    # sa.Column('observations', sa.Text(), nullable=True),
    # sa.ForeignKeyConstraint(['captivity_id'], ['captivities.id'], ),
    # sa.ForeignKeyConstraint(['matrix_composition_id'], ['matrix_compositions.id'], ),
    # sa.ForeignKeyConstraint(['matrix_end_season_id'], ['seasons.id'], ),
    # sa.ForeignKeyConstraint(['matrix_start_season_id'], ['seasons.id'], ),
    # sa.ForeignKeyConstraint(['periodicity_id'], ['periodicities.id'], ),
    # sa.ForeignKeyConstraint(['population_id'], ['populations.id'], ),
    # sa.ForeignKeyConstraint(['studied_sex_id'], ['studied_sex.id'], ),
    # sa.ForeignKeyConstraint(['study_id'], ['studies.id'], ),
    # sa.ForeignKeyConstraint(['treatment_id'], ['treatments.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('intervals',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('matrix_id', sa.Integer(), nullable=True),
    # sa.Column('interval_order', sa.Integer(), nullable=True),
    # sa.Column('interval_start', sa.Date(), nullable=True),
    # sa.Column('interval_end', sa.Date(), nullable=True),
    # sa.ForeignKeyConstraint(['matrix_id'], ['matrices.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('matrix_stages',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('stage_order', sa.SmallInteger(), nullable=True),
    # sa.Column('stage_id', sa.Integer(), nullable=True),
    # sa.Column('matrix_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['matrix_id'], ['matrices.id'], ),
    # sa.ForeignKeyConstraint(['stage_id'], ['stages.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.create_table('matrix_values',
    # sa.Column('id', sa.Integer(), nullable=False),
    # sa.Column('column_number', sa.SmallInteger(), nullable=True),
    # sa.Column('row_number', sa.SmallInteger(), nullable=True),
    # sa.Column('transition_type_id', sa.Integer(), nullable=True),
    # sa.Column('value', sa.Float(), nullable=True),
    # sa.Column('matrix_id', sa.Integer(), nullable=True),
    # sa.ForeignKeyConstraint(['matrix_id'], ['matrices.id'], ),
    # sa.ForeignKeyConstraint(['transition_type_id'], ['transition_types.id'], ),
    # sa.PrimaryKeyConstraint('id')
    # )
    # op.drop_table('posts')
    op.drop_table('comments')
    op.drop_table('follows')
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('follows',
    sa.Column('follower_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('followed_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=False),
    sa.Column('timestamp', mysql.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['followed_id'], [u'users.id'], name=u'follows_ibfk_1'),
    sa.ForeignKeyConstraint(['follower_id'], [u'users.id'], name=u'follows_ibfk_2'),
    sa.PrimaryKeyConstraint('follower_id', 'followed_id'),
    mysql_default_charset=u'utf8',
    mysql_engine=u'InnoDB'
    )
    op.create_table('comments',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('body', mysql.TEXT(), nullable=True),
    sa.Column('body_html', mysql.TEXT(), nullable=True),
    sa.Column('timestamp', mysql.DATETIME(), nullable=True),
    sa.Column('disabled', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True),
    sa.Column('author_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('post_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'users.id'], name=u'comments_ibfk_1'),
    sa.ForeignKeyConstraint(['post_id'], [u'posts.id'], name=u'comments_ibfk_2'),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset=u'utf8',
    mysql_engine=u'InnoDB'
    )
    op.create_table('posts',
    sa.Column('id', mysql.INTEGER(display_width=11), nullable=False),
    sa.Column('body', mysql.TEXT(), nullable=True),
    sa.Column('timestamp', mysql.DATETIME(), nullable=True),
    sa.Column('author_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True),
    sa.Column('body_html', mysql.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], [u'users.id'], name=u'posts_ibfk_1'),
    sa.PrimaryKeyConstraint('id'),
    mysql_default_charset=u'utf8',
    mysql_engine=u'InnoDB'
    )
    op.drop_table('matrix_values')
    op.drop_table('matrix_stages')
    op.drop_table('intervals')
    op.drop_table('matrices')
    op.drop_index('ix_populations_name', 'populations')
    op.drop_table('populations')
    op.drop_table('additional_sources')
    op.drop_index('ix_treatments_name', 'treatments')
    op.drop_table('treatments')
    op.drop_table('plant_traits')
    op.drop_index('ix_studies_study_duration', 'studies')
    op.drop_table('studies')
    op.drop_index('ix_stages_name', 'stages')
    op.drop_table('stages')
    op.drop_index('ix_author_contacts_date_contacted', 'author_contacts')
    op.drop_table('author_contacts')
    op.drop_index('ix_taxonomies_species_author', 'taxonomies')
    op.drop_table('taxonomies')
    op.drop_index('ix_species_timestamp_modified', 'species')
    op.drop_table('species')
    op.drop_table('publications')
    op.drop_index('ix_stage_types_type_name', 'stage_types')
    op.drop_table('stage_types')
    op.drop_index('ix_reproductive_repetition_repetition_name', 'reproductive_repetition')
    op.drop_table('reproductive_repetition')
    op.drop_index('ix_studied_sex_sex_code', 'studied_sex')
    op.drop_table('studied_sex')
    op.drop_index('ix_ecoregions_ecoregion_code', 'ecoregions')
    op.drop_table('ecoregions')
    op.drop_table('matrix_compositions')
    op.drop_index('ix_angio_gymno_angio_gymno_name', 'angio_gymno')
    op.drop_table('angio_gymno')
    op.drop_index('ix_stage_type_classes_type_class', 'stage_type_classes')
    op.drop_table('stage_type_classes')
    op.drop_index('ix_taxonomic_statuses_status_name', 'taxonomic_statuses')
    op.drop_table('taxonomic_statuses')
    op.drop_index('ix_periodicities_name', 'periodicities')
    op.drop_table('periodicities')
    op.drop_index('ix_missing_data_missing_code', 'missing_data')
    op.drop_table('missing_data')
    op.drop_index('ix_growth_forms_raunkiaer_form_name', 'growth_forms_raunkiaer')
    op.drop_table('growth_forms_raunkiaer')
    op.drop_index('ix_captivities_cap_code', 'captivities')
    op.drop_table('captivities')
    op.drop_index('ix_seasons_name', 'seasons')
    op.drop_table('seasons')
    op.drop_index('ix_continents_continent_name', 'continents')
    op.drop_table('continents')
    op.drop_index('ix_dicot_monoc_dicot_monoc_name', 'dicot_monoc')
    op.drop_table('dicot_monoc')
    op.drop_index('ix_treatment_types_type_name', 'treatment_types')
    op.drop_table('treatment_types')
    op.drop_index('ix_transition_types_trans_code', 'transition_types')
    op.drop_table('transition_types')
    op.drop_index('ix_content_email_content_code', 'content_email')
    op.drop_table('content_email')
    op.drop_index('ix_growth_types_type_name', 'growth_types')
    op.drop_table('growth_types')
    op.drop_index('ix_source_types_source_name', 'source_types')
    op.drop_table('source_types')
    op.drop_index('ix_iucn_status_status_code', 'iucn_status')
    op.drop_table('iucn_status')
    op.drop_index('ix_purposes_purpose_name', 'purposes')
    op.drop_table('purposes')
    op.drop_index('ix_esa_statuses_status_code', 'esa_statuses')
    op.drop_table('esa_statuses')
    ### end Alembic commands ###
