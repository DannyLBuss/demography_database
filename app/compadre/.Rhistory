}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version, type="cmd"), collapse=", ")
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version, type="cmd"))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]][,3], type="cmd"), collapse=", "))
}
head(comadre$version)
head(comadre$version$Version)
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
head(comadre$version$Version)
(comadre$version$Version)
version<-"2.0.1"
version<-as.list(factor(length(comadre$version)))
version<-as.list("2.0.1")
version<-as.list(factor(length(comadre$version)))
version<-lapply("2.0.1")
version<-c("2.0.1")
version<-as.list(factor(length(comadre$version)))
version<-("2.0.1")
version<-as.list(factor(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version$Version[[i]], type="cmd"), collapse=", "))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version$Version[[i]], type="cmd"))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version$Version[[i]]))
}
comadre_2017<-cbind(comadre_df, PPMS_A, PPMS_U, PPMS_C, PPMS_F, classes_author, classes_organized, classes_number)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number)
(comadre$version$Version)
(comadre$version)
version<-as.list(factor(length(comadre$version)))
DateCreated<-as.list(factor(length(comadre$version)))
NumberAcceptedSpecies<-as.list(factor(length(comadre$version)))
NumberStudies<-as.list(factor(length(comadre$version)))
NumberMatrices<-as.list(factor(length(comadre$version)))
Agreement<-as.list(factor(length(comadre$version)))
version<-as.list(character(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version$Version[[i]]))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version))
}
for (i in 1:length(compadre$version)){
version[[i]]<-as.character(paste(shQuote(compadre$version[[i]][,1], type="cmd"), collapse=", "))
}
for (i in 1:length(compadre$version)){
version[[i]]<-as.character(paste(shQuote(compadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
x<-comadre$version
ls(x)
comadre2$version<-x
version<-as.list(character(length(x)))
version<-as.list(character(length(x$Version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(x[[i]]$Version))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(x$Version))
}
version<-as.list(character(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(x$Version))
}
version<-as.list(factor(length(comadre$version)))
version<-as.list(factor(length(comadre$metadata)))
version<-as.list(factor(length(comadre_df)))
rm(version)
version<-as.list(factor(length(comadre_df)))
for (i in 1:length(comadre_df)){
version[[i]]<-as.factor(paste(x$Version))
}
version<-as.list(factor(length(1927)))
version<-as.list(factor(length(1:1927)))
for (i in 1:length(comadre_df)){
version[[i]]<-as.factor(paste(x$Version))
}
View(comadre_df)
version<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
version[[i]]<-as.factor(paste(x$Version))
}
DateCreated<-as.list(character(length(classes_author)))
NumberAcceptedSpecies<-as.list(character(length(classes_author)))
NumberStudies<-as.list(factor(character(classes_author)))
NumberMatrices<-as.list(factor(character(classes_author)))
Agreement<-as.list(character(length(classes_author)))
DateCreated<-as.list(factor(length(classes_author)))
NumberAcceptedSpecies<-as.list(factor(length(classes_author)))
NumberStudies<-as.list(factor(length(classes_author)))
NumberMatrices<-as.list(factor(length(classes_author)))
Agreement<-as.list(factor(length(classes_author)))
ls(x)
for (i in 1:length(classes_author)){
DateCreated[[i]]<-as.factor(paste(x$DateCreated))
}
for (i in 1:length(classes_author)){
NumberAcceptedSpecies[[i]]<-as.factor(paste(x$NumberAcceptedSpecies))
}
for (i in 1:length(classes_author)){
NumberStudies[[i]]<-as.factor(paste(x$NumberStudies))
}
for (i in 1:length(classes_author)){
NumberMatrices[[i]]<-as.factor(paste(x$NumberMatrices))
}
for (i in 1:length(classes_author)){
Agreement[[i]]<-as.factor(paste(x$Agreement))
}
classes_author<-as.character(classes_author)
classes_number<-as.array(classes_number)
classes_organized<-as.character.factor(classes_organized)
classes_organized<-as.list(classes_organized)
classes_organized<-as.factor(classes_organized)
classes_organized<-as.character.factor(classes_organized)
classes_organized<-as.character(classes_organized)
###turn 4 part COMADRE object into flat csv ready to analysis
#1. load COMADRE R object
load("/Users/daniellebuss/Downloads/COMADRE_v.2.0.1.RData")
ls(comadre)
#2. get flat version of COMADRE metadata
comadre_df<-comadre$metadata
#3. Get flat string versions of all 4 matrices using matlab2r from popdemo
library(popdemo)
##Get string version of the matrix A string
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
##Get string version of the matrix U string
PPMS_U<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_U[i]<-R2Matlab(comadre$mat[[i]]$matU,noquote=TRUE)
}
##Get string version of the matrix F string
PPMS_F<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_F[i]<-R2Matlab(comadre$mat[[i]]$matF,noquote=TRUE)
}
##Get string version of the matrix F string
PPMS_C<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_C[i]<-R2Matlab(comadre$mat[[i]]$matC,noquote=TRUE)
}
#create list of the class data for each matrix
head(comadre$mat)
classes_author<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_author[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,2], type="cmd"), collapse=", "))
}
classes_organized<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_organized[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,1], type="cmd"), collapse=", "))
}
classes_number<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_number[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,3], type="cmd"), collapse=", "))
}
##Get version data for each row
x<-comadre$version
ls(x)
version<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
version[[i]]<-as.factor(paste(x$Version))
}
DateCreated<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
DateCreated[[i]]<-as.factor(paste(x$DateCreated))
}
NumberAcceptedSpecies<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
NumberAcceptedSpecies[[i]]<-as.factor(paste(x$NumberAcceptedSpecies))
}
NumberStudies<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
NumberStudies[[i]]<-as.factor(paste(x$NumberStudies))
}
NumberMatrices<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
NumberMatrices[[i]]<-as.factor(paste(x$NumberMatrices))
}
Agreement<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
Agreement[[i]]<-as.factor(paste(x$Agreement))
}
classes_author<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_author[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,2], type="cmd"), collapse=", "))
}
classes_organized<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_organized[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,1], type="cmd"), collapse=", "))
}
classes_number<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_number[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,3], type="cmd"), collapse=", "))
}
classes_author<-sapply(classes_author, paste0, collapse="")
classes_number<-sapply(classes_number, paste0, collapse="")
classes_organized<-sapply(classes_organized, paste0, collapse="")
PPMS_A<-sapply(PPMS_A, paste0, collapse="")
PPMS_C<-sapply(PPMS_C, paste0, collapse="")
PPMS_F<-sapply(PPMS_F, paste0, collapse="")
PPMS_U<-sapply(PPMS_U, paste0, collapse="")
PPMS_C<-sapply(PPMS_C, paste0, collapse="")
PPMS_C<-as.character(PPMS_C)
PPMS_F<-as.character(PPMS_F)
PPMS_A<-as.character(PPMS_A)
PPMS_U<-as.character(PPMS_U)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F)
names(comadre_2017)
New_df<-data.frame(comadre_2017$SpeciesAuthor,comadre_2017$SpeciesAccepted,comadre_2017$CommonName, comadre_2017$GenusAccepted,comadre_2017$Family,comadre_2017$Order, comadre_2017$Class, comadre_2017$Phylum, comadre_2017$Kingdom, comadre_2017$OrganismType)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, version)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F)
Agreement<-sapply(Agreement, paste0, collapse="")
version<-sapply(version, paste0, collapse="")
NumberAcceptedSpecies<-sapply(NumberAcceptedSpecies, paste0, collapse="")
NumberMatrices<-sapply(NumberMatrices, paste0, collapse="")
NumberStudies<-sapply(NumberStudies, paste0, collapse="")
DateCreated<-sapply(DateCreated, paste0, collapse="")
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement, version)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement, version, NumberAcceptedSpecies, NumberMatrices, NumberStudies, DateCreated)
head(comadre_2017$PPMS_A)
comadre_2017$PPMS_A[[1]]
comadre_2017$PPMS_A[1]
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
head(PPMS_A)
PPMS_A<-as.character(PPMS_A)
PPMS_A<-as.character(PPMS_A)
PPMS_A<-sapply(PPMS_A, paste0, collapse="")
PPMS_A<-as.character(PPMS_A)
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
PPMS_A<-unlist(PPMS_A, recursive = TRUE, use.names = TRUE)
PPMS_A<-as.factor(PPMS_A)
head(PPMS_A)
PPMS_A<-as.character(PPMS_A)
head(PPMS_A)
PPMS_U<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_U[i]<-R2Matlab(comadre$mat[[i]]$matU,noquote=TRUE)
}
PPMS_U<-unlist(PPMS_U, recursive = TRUE, use.names = TRUE)
PPMS_U<-as.factor(PPMS_U)
PPMS_U<-as.character(PPMS_U)
head(PPMS_U)
PPMS_F<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_F[i]<-R2Matlab(comadre$mat[[i]]$matF,noquote=TRUE)
}
PPMS_F<-unlist(PPMS_F, recursive = TRUE, use.names = TRUE)
PPMS_F<-as.factor(PPMS_F)
PPMS_F<-as.character(PPMS_F)
head(PPMS_F)
PPMS_C<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_C[i]<-R2Matlab(comadre$mat[[i]]$matC,noquote=TRUE)
}
PPMS_C<-unlist(PPMS_C, recursive = TRUE, use.names = TRUE)
PPMS_C<-as.factor(PPMS_C)
PPMS_C<-as.character(PPMS_C)
head(PPMS_C)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement, version, NumberAcceptedSpecies, NumberMatrices, NumberStudies, DateCreated)
comadre_2017$PPMS_A[1]
head(comadre_2017$PPMS_A)
head(comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub(", ", "|", comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub(\, |, comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
x
)
)
head(comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
)
comadre_2017$classes_organized<-gsub(" \", "|", comadre_2017$classes_organized)
write.csv(comadre_2017, "comadre_2017.csv")
write.csv(comadre_2017, "comadre_2017.csv")
getwd()
217+188
setwd("~/Sites/demography_database/app/compadre")
compadre<-read.csv("compadre_migration_2017.csv", header=T)
names(compadre)
compadre2<-compadre[,-120]
names(compadre2)
compadre2<-compadre[,-121]
compadre2<-compadre[,-122]
names(compadre2)
compadre2<-compadre[,-120]
names(compadre2)
names(compadre2)
compadre2<-compadre2[,-121]
names(compadre2)
species_accepted<-unique(compadre$species_accepted)
library(Reol)
species<-species_accepted[1:300]
NROW(species)
MyEOLs<- DownloadSearchedTaxa(species, to.file=FALSE)
MyEOLs <- MyEOLs[(names(MyEOLs) != "eolNA")]
df2<- data.frame(species_accepted = rep(NA,length(MyEOLs)), image1 = NA, image2 = NA)
for (i in 1:length(MyEOLs)){
object <- GatherDataObjectInformation(MyEOLs[i])
media <- object$mediaURL
if (is.null(media) == F){
media <- media[!is.na(media)]
df2$species[i] <- object$Taxon[1]
df2$image1[i] <- media[1]
df2$image2[i] <- media[2]
}
cat(paste(" ",i))
}
species2<-species_accepted[301:600]
MyEOLs<- DownloadSearchedTaxa(species2, to.file=FALSE)
MyEOLs <- MyEOLs[(names(MyEOLs) != "eolNA")]
df3<- data.frame(species_accepted = rep(NA,length(MyEOLs)), image1 = NA, image2 = NA)
for (i in 1:length(MyEOLs)){
object <- GatherDataObjectInformation(MyEOLs[i])
media <- object$mediaURL
if (is.null(media) == F){
media <- media[!is.na(media)]
df3$species[i] <- object$Taxon[1]
df3$image1[i] <- media[1]
df3$image2[i] <- media[2]
}
cat(paste(" ",i))
}
species3<-species_accepted[601:931]
MyEOLs<- DownloadSearchedTaxa(species3, to.file=FALSE)
df4<- data.frame(species_accepted = rep(NA,length(MyEOLs)), image1 = NA, image2 = NA)
MyEOLs <- MyEOLs[(names(MyEOLs) != "eolNA")]
df4<- data.frame(species_accepted = rep(NA,length(MyEOLs)), image1 = NA, image2 = NA)
for (i in 1:length(MyEOLs)){
object <- GatherDataObjectInformation(MyEOLs[i])
media <- object$mediaURL
if (is.null(media) == F){
media <- media[!is.na(media)]
df4$species[i] <- object$Taxon[1]
df4$image1[i] <- media[1]
df4$image2[i] <- media[2]
}
cat(paste(" ",i))
}
df5<-rbind(c(df2,df3,df4))
df5<-rbind((df2,df3,df4))
df5<-rbind(df2,df3,df4)
217+188+212
head(df5)
df6<-df5[,-1]
head(df6)
rm(df5)
names(df6)[3]<-"species_accepted"
df6$species_accepted<-gsub(" ", "_", df6$species_accepted)
names(compadre2)
names(df6)
names(df6)[1]<-"image_path"
names(df6)[2]<-"image_path2"
df<-merge(compadre2, df6, by="species_accepted", all=TRUE)
head(compadre2$species_accepted)
head(df6$species_accepted)
compadre2$species_accepted<-gsub(" ", "_", compadre2$species_accepted)
df<-merge(compadre2, df6, by="species_accepted", all=TRUE)
df<-merge(compadre2, df6, by="species_accepted", all.x=TRUE)
head(compadre2$species_accepted)
head(df6$species_accepted)
head(df$image_path)
compadre2$imagecheck<-"noimage"
df<-merge(compadre2, df6, by="species_accepted", all.x=TRUE)
df<-merge(compadre2, df6, by="species_accepted", all=TRUE)
head(compadre2$database_date_check)
compadre<-compadre2
compadre<-df
compadre<-df[df$imagecheck=="noimage"]
compadre<-df[,df$imagecheck=="noimage"]
compadre<-df[df$imagecheck=="noimage",]
compadre<-df[!df$imagecheck=="noimage",]
compadre<-df[df$imagecheck=="noimage",]
df<-merge(compadre2, df6, by="species_accepted", all.x =TRUE)
compadre<-df[df$imagecheck=="noimage",]
df<-merge(compadre2, df6, by="species_accepted", all.x =TRUE)
compadre<-df[df$imagecheck=="noimage",]
compadre2$imagecheck<-"noimage"
df<-merge(compadre2, df6, by="species_accepted", all.x =TRUE)
compadre<-df[df$imagecheck=="noimage",]
View(compadre)
compadre$imagecheck
summary(compadre$imagecheck)
x<-as.factor(compadre$imagecheck)
levels(x)
duplicated(df6)
df6<-df6[!duplicated(df6)]
df6<-df6[!duplicated(df6),]
df<-merge(compadre2, df6, by="species_accepted", all.x =TRUE)
compadre<-df[df$imagecheck=="noimage",]
head(compadre2$database_date_check)
head(df$database_date_check)
compadre$database_date_digitization<-as.Date(df$datbase_date_digitization, "%m.%d.%Y")
compadre$datbase_date_check<-as.Date(FINAL$DateOfCheck, "%m.%d.%Y")
compadre$datbase_date_check<-as.Date(df$datbase_date_check, "%m.%d.%Y")
head(df$database_date_check)
compadre$datbase_date_check<-as.Date(compadre$datbase_date_check, "%m.%d.%Y")
compadre$datbase_date_check<-as.POSIXct(df$datbase_date_check, "%m.%d.%Y")
df$datbase_date_check
head(df$database_date_check)
names(df)
df$datbase_date_check
levels(df$datbase_date_check)
compadre$database_date_created<-as.Date(compadre$database_date_created, "%d.%m.%Y")
head(compadre$datbase_date_created)
compadre$datbase_date_created
compadre<-df[df$imagecheck=="noimage",]
head(df$database_date_check)
head(compadre$datbase_date_created)
compadre<-df
head(df$database_date_check)
head(compadre$datbase_date_created)
compadre$database_date_digitization<-as.Date(df$datbase_date_digitization, "%m.%d.%Y")
x<-as.character(df$database_date_created)
levels(x)
X<-as.factor(compadre2$matrix_start_season)
levels(X)
X<-as.factor(compadre2$matrix_end_season)
levels(X)
write.csv(df, "compadre_temp.csv")
names(df)
compadre2<-read.csv("compadre_migration_2017.csv", header=T)
compadre2$test<-"ALL"
head(compadre2$species_accepted)
compadre2$species_accepted<-gsub(" ", "_", compadre2$species_accepted)
df<-merge(compadre2, df6, by="species_accepted", all.x =TRUE)
which(duplicated(df))
df<-merge(compadre2, df6, by="species_accepted", all=TRUE)
which(duplicated(df))
df<-merge(compadre2, df6, by="species_accepted", all.x=TRUE)
which(duplicated(df))
write.csv(compadre2, "compadre_temp.csv")
write.csv(df6, "EOLs_compadre.csv")
names(compadre)
NROW(compadre$check=="unreleased")
compadre$check<-as.factor(compadre$check)
compadre$check
compadre$matrix_treatment_type<-as.factor(compadre$matrix_treatment_type)
NROW(matrix_treatment_type=="NDY")
NROW(compadre$matrix_treatment_type=="NDY")
NROW(compadre$matrix_treatment_type="NDY")
NROW(compadre$matrix_treatment_type=="NDY")
Observations<-character(length(compadre$matrix_observations))
for (i in 1:length(compadre$matrix_observations)){
Observations[i] <- {
if (c(compadre$check=="unreleased" & compadre$matrix_treatment_type == "NDY")){
paste("NDY")}
else Observations[i] <-
{paste(compadre$matrix_observations[i], "Treatment info:", compadre$matrix_treatment_type_appendtoobservation[i])}
}
}
head(Observations)
Observations<-character(length(compadre$matrix_observations))
for (i in 1:length(compadre$matrix_observations)){
Observations[i] <- {
if (c(compadre$check=="unreleased" & compadre$matrix_treatment_type == "NDY")){
paste("NDY")}
else
{paste(compadre$matrix_observations[i], "Treatment info:", compadre$matrix_treatment_type_appendtoobservation[i])}
}
}
head(Observations)
Observations
for (i in 1:length(compadre$matrix_observations)){
Observations[i] <- {
if (compadre$check=="unreleased" & compadre$matrix_treatment_type == "NDY"){
paste("NDY")}
else
{paste(compadre$matrix_observations[i], "Treatment info:", compadre$matrix_treatment_type_appendtoobservation[i])}
}
}
Observations
compadre$matrix_observations_new<-Observations
compadre$matrix_observations_new<-gsub("NA Treatment info: NDY","NDY", compadre$matrix_observations_new)
head(Observations)
compadre$matrix_observations_new
df<-read.csv("comadre_migration_2017.csv", header=T)
names(df)
