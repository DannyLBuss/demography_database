key<-name_backbone(name="Bertholletia excelsa")$speciesKey
dat<-occ_search(taxonKey=key, return="data",limit=3000)
gbifmap(dat)
map("world", resolution = 175)
points(-89.65, 34, col=2, cex=1)
load("/Users/daniellebuss/Downloads/COMADRE_v.2.0.1.RData")
ls(comadre)
df<-comadre_2016$metadata
df<-comadre$metadata
load("/Users/daniellebuss/Downloads/COMPADRE_v.4.0.1.RData")
load("/Users/daniellebuss/Downloads/COMPADRE_v.4.0.1.RData")
compadre_2016<-compadre
compadre<-compadre_2016$metadata
df2<-subset(df, by=df2$SpeciesAccepted, list="Setaria faberi")
df2<-subset(df, by=df2$SpeciesAccepted, list=Setaria faberi)
df2<-subset(df, by=df2$SpeciesAccepted=Setaria faberi)
df2<-subset(df, df2$SpeciesAccepted=="Setaria faberi")
df2<-df[df2$SpeciesAccepted=="Setaria faberi"]
df2<-df[df2$SpeciesAccepted=="Setaria faberi",]
df2<-df[,df2$SpeciesAccepted=="Setaria faberi"]
df2<-df[df$SpeciesAccepted=="Setaria faberi",]
df2<-df[df$SpeciesAccepted=="Polygonum perfoliatum",]
head(df$SpeciesAccepted)
df2<-df[df$SpeciesAccepted=="Polygonum_perfoliatum",]
df2<-df[df$SpeciesAccepted=="Acipenser_fulvescens",]
x<-as.factor(df$SpeciesAccepted)
levels(x)
xx<-as.factor(df$SpeciesAuthor)
levels(xx)
df2<-df[df$SpeciesAuthor=="Setaria_faberi",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum",]
comadre_df<-comadre$metadata
df<-compadre
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum",]
df2<-df[df$SpeciesAccepted=="Polygonum_perfoliatum",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum",]
head(df$SurvivalIssue)
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=="1.00000",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=1.00000,]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=="1.00000",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=="1",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=="1.0",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=="1",]
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum" & df$SurvivalIssue=="1" & df$MatrixStartYear=="2000",]
df2
duplicated(df2)
df2<-df[df$SpeciesAuthor=="Polygonum_perfoliatum",]
duplicated(df2)
df2<-df[df$SpeciesAuthor=="Setaria_faberi",]
duplicated(df2)
df2<-df[df$SpeciesAuthor=="Asplenium_adulterinum",]
duplicated(df2)
df2<-df[df$SpeciesAccepted=="Astragalus_alopecurus",]
duplicated(df2)
df2<-df[df$SpeciesAuthor=="Astragalus_alopecurus",]
duplicated(df2)
load("/Users/daniellebuss/Downloads/MCMCglmm_Dirichlet_nophy.Rdata")
library(popdemo)
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
head(PPMS_A)
PPMS_U<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_U[i]<-R2Matlab(comadre$mat[[i]]$matU,noquote=TRUE)
}
PPMS_F<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_F[i]<-R2Matlab(comadre$mat[[i]]$matF,noquote=TRUE)
}
PPMS_C<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_C[i]<-R2Matlab(comadre$mat[[i]]$matC,noquote=TRUE)
}
classes<-as.list(factor(length(compadre$matrixClass)))
classes<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,2], type="cmd"), collapse=", "))
}
classes_2<-as.list(factor(length(comadre$matrixClass)))
ls(classes_2)
classes_2
ls(comadre$matrixClass)
head(comadre$matrixClass)
head(classes)
classes_author<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_author[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,2], type="cmd"), collapse=", "))
}
head(classes)
classes_organized<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_organized[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,1], type="cmd"), collapse=", "))
}
head(classes_organized)
head(comadre$matrixClass)
classes_number<-as.list(factor(length(comadre$matrixClass)))
classes_number<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_number[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,3], type="cmd"), collapse=", "))
}
rm(classes)
rm(classes_2)
head(comadre$version)
version<-as.list(factor(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]][,1], type="cmd"), collapse=", "))
}
head(comadre$matrixClass)
head(comadre$mat)
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste((comadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version, type="cmd"), collapse=", ")
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version, type="cmd"))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]][,3], type="cmd"), collapse=", "))
}
head(comadre$version)
head(comadre$version$Version)
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
head(comadre$version$Version)
(comadre$version$Version)
version<-"2.0.1"
version<-as.list(factor(length(comadre$version)))
version<-as.list("2.0.1")
version<-as.list(factor(length(comadre$version)))
version<-lapply("2.0.1")
version<-c("2.0.1")
version<-as.list(factor(length(comadre$version)))
version<-("2.0.1")
version<-as.list(factor(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(shQuote(comadre$version$Version[[i]], type="cmd"), collapse=", "))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version$Version[[i]], type="cmd"))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version$Version[[i]]))
}
comadre_2017<-cbind(comadre_df, PPMS_A, PPMS_U, PPMS_C, PPMS_F, classes_author, classes_organized, classes_number)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number)
(comadre$version$Version)
(comadre$version)
version<-as.list(factor(length(comadre$version)))
DateCreated<-as.list(factor(length(comadre$version)))
NumberAcceptedSpecies<-as.list(factor(length(comadre$version)))
NumberStudies<-as.list(factor(length(comadre$version)))
NumberMatrices<-as.list(factor(length(comadre$version)))
Agreement<-as.list(factor(length(comadre$version)))
version<-as.list(character(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version$Version[[i]]))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(comadre$version[[i]]$Version))
}
for (i in 1:length(compadre$version)){
version[[i]]<-as.character(paste(shQuote(compadre$version[[i]][,1], type="cmd"), collapse=", "))
}
for (i in 1:length(compadre$version)){
version[[i]]<-as.character(paste(shQuote(compadre$version[[i]]$Version, type="cmd"), collapse=", "))
}
x<-comadre$version
ls(x)
comadre2$version<-x
version<-as.list(character(length(x)))
version<-as.list(character(length(x$Version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(x[[i]]$Version))
}
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(x$Version))
}
version<-as.list(character(length(comadre$version)))
for (i in 1:length(comadre$version)){
version[[i]]<-as.factor(paste(x$Version))
}
version<-as.list(factor(length(comadre$version)))
version<-as.list(factor(length(comadre$metadata)))
version<-as.list(factor(length(comadre_df)))
rm(version)
version<-as.list(factor(length(comadre_df)))
for (i in 1:length(comadre_df)){
version[[i]]<-as.factor(paste(x$Version))
}
version<-as.list(factor(length(1927)))
version<-as.list(factor(length(1:1927)))
for (i in 1:length(comadre_df)){
version[[i]]<-as.factor(paste(x$Version))
}
View(comadre_df)
version<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
version[[i]]<-as.factor(paste(x$Version))
}
DateCreated<-as.list(character(length(classes_author)))
NumberAcceptedSpecies<-as.list(character(length(classes_author)))
NumberStudies<-as.list(factor(character(classes_author)))
NumberMatrices<-as.list(factor(character(classes_author)))
Agreement<-as.list(character(length(classes_author)))
DateCreated<-as.list(factor(length(classes_author)))
NumberAcceptedSpecies<-as.list(factor(length(classes_author)))
NumberStudies<-as.list(factor(length(classes_author)))
NumberMatrices<-as.list(factor(length(classes_author)))
Agreement<-as.list(factor(length(classes_author)))
ls(x)
for (i in 1:length(classes_author)){
DateCreated[[i]]<-as.factor(paste(x$DateCreated))
}
for (i in 1:length(classes_author)){
NumberAcceptedSpecies[[i]]<-as.factor(paste(x$NumberAcceptedSpecies))
}
for (i in 1:length(classes_author)){
NumberStudies[[i]]<-as.factor(paste(x$NumberStudies))
}
for (i in 1:length(classes_author)){
NumberMatrices[[i]]<-as.factor(paste(x$NumberMatrices))
}
for (i in 1:length(classes_author)){
Agreement[[i]]<-as.factor(paste(x$Agreement))
}
classes_author<-as.character(classes_author)
classes_number<-as.array(classes_number)
classes_organized<-as.character.factor(classes_organized)
classes_organized<-as.list(classes_organized)
classes_organized<-as.factor(classes_organized)
classes_organized<-as.character.factor(classes_organized)
classes_organized<-as.character(classes_organized)
###turn 4 part COMADRE object into flat csv ready to analysis
#1. load COMADRE R object
load("/Users/daniellebuss/Downloads/COMADRE_v.2.0.1.RData")
ls(comadre)
#2. get flat version of COMADRE metadata
comadre_df<-comadre$metadata
#3. Get flat string versions of all 4 matrices using matlab2r from popdemo
library(popdemo)
##Get string version of the matrix A string
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
##Get string version of the matrix U string
PPMS_U<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_U[i]<-R2Matlab(comadre$mat[[i]]$matU,noquote=TRUE)
}
##Get string version of the matrix F string
PPMS_F<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_F[i]<-R2Matlab(comadre$mat[[i]]$matF,noquote=TRUE)
}
##Get string version of the matrix F string
PPMS_C<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_C[i]<-R2Matlab(comadre$mat[[i]]$matC,noquote=TRUE)
}
#create list of the class data for each matrix
head(comadre$mat)
classes_author<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_author[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,2], type="cmd"), collapse=", "))
}
classes_organized<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_organized[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,1], type="cmd"), collapse=", "))
}
classes_number<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_number[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,3], type="cmd"), collapse=", "))
}
##Get version data for each row
x<-comadre$version
ls(x)
version<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
version[[i]]<-as.factor(paste(x$Version))
}
DateCreated<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
DateCreated[[i]]<-as.factor(paste(x$DateCreated))
}
NumberAcceptedSpecies<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
NumberAcceptedSpecies[[i]]<-as.factor(paste(x$NumberAcceptedSpecies))
}
NumberStudies<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
NumberStudies[[i]]<-as.factor(paste(x$NumberStudies))
}
NumberMatrices<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
NumberMatrices[[i]]<-as.factor(paste(x$NumberMatrices))
}
Agreement<-as.list(factor(length(classes_author)))
for (i in 1:length(classes_author)){
Agreement[[i]]<-as.factor(paste(x$Agreement))
}
classes_author<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_author[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,2], type="cmd"), collapse=", "))
}
classes_organized<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_organized[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,1], type="cmd"), collapse=", "))
}
classes_number<-as.list(factor(length(comadre$matrixClass)))
for (i in 1:length(comadre$matrixClass)){
classes_number[[i]]<-as.factor(paste(shQuote(comadre$matrixClass[[i]][,3], type="cmd"), collapse=", "))
}
classes_author<-sapply(classes_author, paste0, collapse="")
classes_number<-sapply(classes_number, paste0, collapse="")
classes_organized<-sapply(classes_organized, paste0, collapse="")
PPMS_A<-sapply(PPMS_A, paste0, collapse="")
PPMS_C<-sapply(PPMS_C, paste0, collapse="")
PPMS_F<-sapply(PPMS_F, paste0, collapse="")
PPMS_U<-sapply(PPMS_U, paste0, collapse="")
PPMS_C<-sapply(PPMS_C, paste0, collapse="")
PPMS_C<-as.character(PPMS_C)
PPMS_F<-as.character(PPMS_F)
PPMS_A<-as.character(PPMS_A)
PPMS_U<-as.character(PPMS_U)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F)
names(comadre_2017)
New_df<-data.frame(comadre_2017$SpeciesAuthor,comadre_2017$SpeciesAccepted,comadre_2017$CommonName, comadre_2017$GenusAccepted,comadre_2017$Family,comadre_2017$Order, comadre_2017$Class, comadre_2017$Phylum, comadre_2017$Kingdom, comadre_2017$OrganismType)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, version)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F)
Agreement<-sapply(Agreement, paste0, collapse="")
version<-sapply(version, paste0, collapse="")
NumberAcceptedSpecies<-sapply(NumberAcceptedSpecies, paste0, collapse="")
NumberMatrices<-sapply(NumberMatrices, paste0, collapse="")
NumberStudies<-sapply(NumberStudies, paste0, collapse="")
DateCreated<-sapply(DateCreated, paste0, collapse="")
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement, version)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement, version, NumberAcceptedSpecies, NumberMatrices, NumberStudies, DateCreated)
head(comadre_2017$PPMS_A)
comadre_2017$PPMS_A[[1]]
comadre_2017$PPMS_A[1]
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
head(PPMS_A)
PPMS_A<-as.character(PPMS_A)
PPMS_A<-as.character(PPMS_A)
PPMS_A<-sapply(PPMS_A, paste0, collapse="")
PPMS_A<-as.character(PPMS_A)
PPMS_A<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_A[i]<-R2Matlab(comadre$mat[[i]]$matA,noquote=TRUE)
}
PPMS_A<-unlist(PPMS_A, recursive = TRUE, use.names = TRUE)
PPMS_A<-as.factor(PPMS_A)
head(PPMS_A)
PPMS_A<-as.character(PPMS_A)
head(PPMS_A)
PPMS_U<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_U[i]<-R2Matlab(comadre$mat[[i]]$matU,noquote=TRUE)
}
PPMS_U<-unlist(PPMS_U, recursive = TRUE, use.names = TRUE)
PPMS_U<-as.factor(PPMS_U)
PPMS_U<-as.character(PPMS_U)
head(PPMS_U)
PPMS_F<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_F[i]<-R2Matlab(comadre$mat[[i]]$matF,noquote=TRUE)
}
PPMS_F<-unlist(PPMS_F, recursive = TRUE, use.names = TRUE)
PPMS_F<-as.factor(PPMS_F)
PPMS_F<-as.character(PPMS_F)
head(PPMS_F)
PPMS_C<-numeric(length(comadre$mat))
for (i in 1:length(comadre$mat)){
PPMS_C[i]<-R2Matlab(comadre$mat[[i]]$matC,noquote=TRUE)
}
PPMS_C<-unlist(PPMS_C, recursive = TRUE, use.names = TRUE)
PPMS_C<-as.factor(PPMS_C)
PPMS_C<-as.character(PPMS_C)
head(PPMS_C)
comadre_2017<-cbind(comadre_df, classes_author, classes_organized, classes_number, PPMS_A, PPMS_C, PPMS_U, PPMS_F, Agreement, version, NumberAcceptedSpecies, NumberMatrices, NumberStudies, DateCreated)
comadre_2017$PPMS_A[1]
head(comadre_2017$PPMS_A)
head(comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub(", ", "|", comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub(\, |, comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
head(comadre_2017$classes_organized)
x
)
)
head(comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
comadre_2017$classes_organized<-gsub("\", "|", comadre_2017$classes_organized)
)
comadre_2017$classes_organized<-gsub(" \", "|", comadre_2017$classes_organized)
write.csv(comadre_2017, "comadre_2017.csv")
write.csv(comadre_2017, "comadre_2017.csv")
getwd()
217+188
setwd("~/Sites/demography_database/app/compadre")
compadre<-read.csv("compadre_migration_2017.csv", header=T)
compadre$database_date_check
compadre$database_date_check<-as.Date(compadre$database_date_check, "%m/%d/%Y")
compadre$database_date_check
head(compadre$database_date_check)
names(compadre)
head(compadre$database_date_created)
compadre$database_date_created<-as.Date(database_date_created, "%m/%d/%Y")
compadre$database_date_created<-as.Date(compadre$database_date_created, "%m/%d/%Y")
head(compadre$database_date_created)
compadre$database_date_created2<-as.POSIXct(compadre$database_date_created)
head(compadre$database_date_created2)
compadre$database_date_created2<-as.Date(compadre$database_date_created2, "%d/%m/%Y")
head(compadre$database_date_created2)
compadre<-read.csv("compadre_migration_2017.csv", header=T)
head(compadre$database_date_created2)
compadre<-read.csv("compadre_migration_2017.csv", header=T)
head(compadre$database_date_created)
compadre$database_date_created2<-as.Date(compadre$database_date_created, "%d/%m/%Y")
head(compadre$database_date_created2)
compadre$database_date_created2<-as.Date(compadre$database_date_created, "%m/%d/%Y")
head(compadre$database_date_created2)
compadre$database_date_created2<-as.POSIXct(compadre$database_date_created)
compadre$database_date_created2<-as.Date(compadre$database_date_created2, "%d/%m/%Y")
head(compadre$database_date_created2)
compadre$database_date_created2<-as.POSIXct(compadre$database_date_created)
head(compadre$database_date_created2)
compadre$database_date_created2<-as.Date(compadre$database_date_created, "%m/%d/%Y")
head(compadre$database_date_created2)
compadre$database_date_created2<-as.POSIXct(compadre$database_date_created2)
head(compadre$database_date_created2)
compadre$database_date_created2<-as.Date(compadre$database_date_created2, "%d/%m/%Y")
head(compadre$database_date_created2)
compadre$database_date_created2<-format(as.Date(compadre$database_date_created2, "%d/%m/%Y"))
head(compadre$database_date_created2)
compadre$database_date_created2<-format(as.Date(compadre$database_date_created2), "%d/%m/%Y")
head(compadre$database_date_created2)
compadre<-read.csv("compadre_migration_2017.csv", header=T)
head(compadre$database_date_created)
compadre$database_date_created<-as.Date(compadre$database_date_created, "%m/%d/%Y")
compadre$database_date_created<-as.POSIXct(compadre$database_date_created)
compadre$database_date_created<-format(as.Date(compadre$database_date_created), "%d/%m/%Y")
head(compadre$database_date_created)
names(compadre)
head(compadre$database_date_check)
compadre$database_date_check<-as.Date(compadre$database_date_check, "%m/%d/%Y")
compadre$database_date_check<-as.POSIXct(compadre$database_date_check)
compadre$database_date_check<-format(as.Date(compadre$database_date_check), "%d/%m/%Y")
head(compadre$database_date_check)
compadre<-read.csv("compadre_migration_2017.csv", header=T)
head(compadre$database_date_check)
compadre$database_date_check<-as.Date(compadre$database_date_check, "%m/%d/%Y")
head(compadre$database_date_check)
compadre$database_date_check<-as.POSIXct(compadre$database_date_check)
head(compadre$database_date_check)
compadre$database_date_check
compadre$database_date_check<-format(as.Date(compadre$database_date_check), "%d/%m/%Y")
compadre$database_date_check
names(compadre)
head(compadre$date_author_contacted)
compadre$date_author_contacted<-as.Date(compadre$date_author_contacted, "%m/%d/%Y")
compadre$date_author_contacted<-as.POSIXct(compadre$date_author_contacted)
compadre$date_author_contacted<-format(as.Date(compadre$date_author_contacted), "%d/%m/%Y")
head(compadre$date_author_contacted)
names(compadre)
head(compadre$date_author_contacted_again)
compadre$date_author_contacted_again<-as.Date(compadre$date_author_contacted_again, "%m/%d/%Y")
compadre$date_author_contacted_again<-as.POSIXct(compadre$date_author_contacted_again)
compadre$date_author_contacted_again<-format(as.Date(compadre$date_author_contacted_again), "%d/%m/%Y")
head(compadre$date_author_contacted_again)
head(compadre$publication_date_digitization)
head(compadre$publication_date_digitization)
compadre$publication_date_digitization<-as.Date(compadre$publication_date_digitization, "%m/%d/%Y")
compadre$publication_date_digitization<-as.POSIXct(compadre$publication_date_digitization)
compadre$publication_date_digitization<-format(as.Date(compadre$publication_date_digitization), "%d/%m/%Y")
head(compadre$publication_date_digitization)
names(compadre)
compadre$taxonomy_col_check_date
names(compadre)
write.csv(compadre, "compadre_migration_2017.csv")
